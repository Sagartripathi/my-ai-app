version: "3.9"

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi_app
    ports:
      - "8002:8002"
    env_file:
      - .env
    environment:
      # DATABASE_URL: postgresql://postgres:admin@db:5432/AI_CHATBOT
      DATABASE_URL: postgresql://postgres:admin123@database-1.ccda62qsu988.us-east-1.rds.amazonaws.com:5432/postgres
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./:/app
      - /app/__pycache__
    restart: unless-stopped
    networks:
      - app_network

  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_DB: "database-1"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "admin123"
      POSTGRES_HOST_AUTH_METHOD: "trust"
    ports:
      - "5444:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  postgres_data:
    driver: local

networks:
  app_network:
    driver: bridge
